# ------------------------------------------------------------------------------------------------
# 주소록
# 기능 - 연락처 저장 / 삭제 / 수정
# 데이터 - 이름, 번호, 그룹
# ------------------------------------------------------------------------------------------------

# contacts={}
# contacts['010-3113-0782']={'name':'신호림'}
# contacts['010-1234-5678']={'name':'A','group':'F'}
# contacts['010-2345-6789']={'name':'B','email':'bbb@knu.ac.kr'}
# contacts['010-3456-7890']={'name':'C','group':'F'}

# def saveContact(phone,*info):
#     # 존재 여부 체크 => 멤버 연산자 in
#     if phone not in contacts:
#         contacts[phone]=phone
#     else: print('이미 저장된 연락처 입니다.')

# ------------------------------------------------------------------------------------------------
# 주소록 프로그램 데이터 클래스 => 데이터 타입
# - Member
# - 필수 데이터 => 전화번호, 이름
# - 선택 데이터 => 집전화, 이메일
# ------------------------------------------------------------------------------------------------
class Member:
    # 클래스 변수

    # 인스턴스 변수 생성 및 초기화 메서드
    def __init__(self,phone,name,home='',email=''):  #home=None 해도됨
        self.phone=phone
        self.name=name
        self.home=home
        self.email=email

    # 인스턴스 메서드
    def info(self):
        print(f'--- [{self.name}] ---')
        print(f'전화번호 : {self.phone}')
        print(f'집전화 : {self.home}')
        print(f'이메일 : {self.email}')

me=Member('010-3113-0782','신호림')
you=Member('010-1234-5678','마징가',email='hero@knu.ac.kr')
him=Member('010-2345-6789','배트맨','02)123-4567')

me.info()
you.info()
him.info()

# ------------------------------------------------------------------------------------------------
# 주소록 프로그램
# 기능 - 연락처 저장 / 삭제 / 수정
# ------------------------------------------------------------------------------------------------
class Contacts:
    def __init__(self):
        pass






# ------------------------------------------------------------------------------------------------
# 은행 관리 프로그램 구현
# ------------------------------------------------------------------------------------------------
# 기능 - 계좌 개설, 해지, 입금, 출금
# 데이터 - 계좌번호, 이름, 개설일, 잔액, 이율, 주민번호
# ------------------------------------------------------------------------------------------------
# 1. 은행 프로그램에 사용될 계좌 클래스 
# 필수 데이터 - 계좌번호, 이름, 개설일, 잔액, 이율, 주민번호
# 선택 데이터 - 없음
# 비공개 데이터 - 주민번호
# ------------------------------------------------------------------------------------------------
class Client:
    # 클래스 변수
    Bank='신한'

    # 인스턴스 변수 생성 및 초기화 메서드
    def __init__(self,account,name,date,balance,rate,id):
        self.account=account
        self.name=name
        self.date=date
        self.__balance=balance #비공개
        self.rate=rate
        self.__id=id           #비공개 => 클래스 밖에서 사용 불가

    # 인스턴스 메서드
    def info(self):
        print(f'--- [{self.account}] ---')
        print(f'예금주 : {self.name}')
        print(f'개설일 : {self.date}')
        print(f'이율 : {self.rate}')
        print(f'잔액 : {self.__balance}') #클래스 내에서의 작업이라서 출력됨
    
    # get/set 메서드
    def get__id(self): return self.__id

c1=Client('111','배트맨','2022.12.28',5000,3.3,'960507-*******')

c1.info()
print(c1.__id)
#c1.__balance=1000000000 해봤자 내부에서는 안바뀜 __balance라는 같은 이름의 변수가 생김